MINHAS ANOTACOES DOS ESTUDOS DE HTML e CSS!

repositorios publicos - github.com/gustavoguanabara e gustavoguanabara.github.io

html - focado em conteudo - texto, imagem, video, tabela
css - design, cores, sombras, tamanhos, posicionamento
js - interacao, menu, popup, validacao


CAPITULO 4

estrutura basica de arquivos html-css:

<!DOCTYPE html> #tipo
<html lag="pt-br"> #serve para informar a linguagem do conteudo contido na pagina

	<head> #onde sao feita as configuracoes
		
		<meta charset="UTF-8"> #tipo de caracteres que aceita cedilha e acentuacao
		<meta name="viewport"
		content="width=device-width,
		initial-scale=1.0"> #para ocupar toda area branca da pagina, tamanho, e escala 100%
		<title>Document</title>

	</head>

	<body> #onde esta o conteudo
		
		<h1>Ola, mundo!</h1>

	</body>

<html>

#< > para abrir uma tag, </ > para fechar tag

#para criar um codigo base rapidamente, digitar "!" e aguardar, apos segundos clique Enter
#da mesma forma podemos por "h1", por exemplo, aguardar e Enter, para criar automaticamente um titulo de nivel 1
#o mesmo serve para paragrafos "p", "img", etc


CAPITULO 5

Quebra de linha
Se precisar quebrar um texto em algum lugar específico <br> como esse você pode usar a tag &lt;br&gt;

Símbolos e códigos - Chamados de HTML Entities
&reg; marca registrada, &empty; vazio, &sum; soma, &delta; delta
&copy; copyright, &trade; trade mark, &larr; &uarr; &rarr; &darr; setas
&euro; euro, &pound; libra, &yen; yen, &cent; cent

Emojis
Para inserie emojis, podemos consultar o código através do site: emojipedia.org 
código: U+1F604, substituindo o U+ por &#x (letra x minúscula): &#x1F604 

Comentarios
Para adicionar um comentario, utilizamos: <!-- COMENTARIO AQUI -->


CAPITULO 6

Imagens:
Para evitar processos por direitos autorais.
Referencia sites imagens pagas: iStockPhoto, DepositPhotos, ShutterStock.
Referencia sites imagens livres: UnSplash, Pexels, FreePik, Rawpixel, Pixabay, Libreshot, Wikimedia Commons.

Para adicionar imagens usamos <img>, basta digitar "img" e Enter que atutomaticamente entra o codigo,
e possivel adicionarmos imagens da mesma pasta, de pastas na pasta e de sites, usando seu URL.
Os parametros dessa tag sao <src> source = origem, e <alt> texto alternativo.
Utilizando o comando Ctrl+Space em src = "COMANDO", o editor fara uma listagem dos arquivos possiveis.

Os textos alternativos <alt>, além de ajudar na indexacao em mecanismos de busca tambem ajudam na acessibilidade
para visitantes deficientes visuais, por isso e importante descrever a imagem.

Favicon:
Saos os icones que aparecem no titulo do site, abas e em favoritos.
O arquivo geralmente esta em formato ICO, e podemos encontrar alguns prontos no site: IconArchive, ou desenhar
em favicon.cc, tambem em favicon.io podemos criar partindo de imagens.
Normalmente o nome do arquivo sera: favicon.ICO, mas pode ser tambem em PNG.
No download de favicon.io, receberemos um arquivo para descompactar (vem varios tipos de arquivos),
ja no site temos uma lista de links que podem ser utilizados para ser aceito em diversas plataformas.

Na linha 6 de nosso documento, adicionamos a tag <link>, digitando link e Enter, substituimos os parametros 
href="nome do arquivo" e rel="shortcut icon", inserimos type="image/x-icon".


CAPITULO 7

Hierarquia de titulos:
Titulos vao de h1 ate h6, nao significa seu tamanho mas sim sua importancia quanto ao assunto, a sua Hierarquia,
sendo h1 o tema principal.
Para preencher um paragrafo com texto aleatorio basta digitar "lorem" + Enter.


CAPITULO 8

Formatacoes e tags:
Ver arquivo ex011 na pasta outros.

ENVELOPAR PARTE DE CONTEUDO -----> CTRL + SHIFT + P, Emmet (Envolver com abreviacao (abbr))

CAPITULO 9

Listas com HTML:
Lista ordenada, ordered list <ol> para determinar a lista e <li> list item para identificar o item.
A tag <ol> possui um parametro type e tambem start:
1 - numerico, A - alfabetico maiusculo, a - alfabetico minusculo, I - romano minusculo, i - romano maiusculo.
Exemplo: <ol type= "I", start= "5">, a lista vai iniciar de V, VI, VII...

Lista nao ordenada, unordered list <ul>, o parametro type significa o marcador, podendo ser: circle, disc, square.

Misturando listas, exemplo:

<ol>
	<li>Item 1</li>
	<li>Item 2</li>
	<ol type="a">
		<li>Item 2.1</li>
		<li>Item 2.2</li>
	</ol>
	<li>Item 3</li>
</ol>

Lista de definicoes, <dl>, sao listas sem marcadores, dentro dela temos tags <dt> definition term e <dd> definition description, ambas tem fechamento opcional. Exemplo:

<dl>
	<dt>HTML</dt>
	<dd>Linguagem de marcacao utilizada para criar conteudo de sites.</dd>

	<dt>CSS</dt>
	<dd>Linguagem de marcacao para por estilo no seu site.</dd>
</dl>


CAPITULO 10

Hyperlinks:
Para a criacao de hyperlinks devemos utilizar ancoras, <a>, tendo o principal atributo href, onde utilizamos a URL, e hreflang que serve para inserir a lingua da pagina destino, Exemplo:

<a href="https://google.com">Link do Google</a> 
<a href="https://terra.com.br" hreflang="pt-br">Site Terra</a>

Para ter controle da forma do hyperlink abrir, utilizamos o atributo target com os valores:
_blank	 -> abre em nova janela em branco
_self	 -> abre na frame atual (padrao)
_top	 -> desfazer todos frames e abrir o destino no navegador completo
_parent  -> similar a top, em referencia a janela mae
nome-do-frame caso esteja utilizando frames, indicar nome da janela a abrir

<a href="pagina2.html" target="_self">Continuar navegando pelo site</a>
<a href="pagina3.html" target="_blank">Continuar em nova janela</a>

O atributo rel indica se:
next	 -> link é para proxima parte do documento atual
prev 	 -> link é para parte anterior do documento atual
author	 -> link é para site do autor
external -> link que nao pertence ao site atual
nofollow -> link para site nao endosado, pago

<a href="pagina2.html" target="_self" rel="next">Continuar no site</a>
<a href="https://google.com" target="_blank" rel="external">Pagina externa</a>

Atributo para downnloads usado e download, e alguns de seus tipos sao:
application/zip, text/html, text/css, text/javascript, video/mp4, video/H264, video/JPEG, audio/aac, audio/mpeg, font/ttf, image/jpeg, image/png, etc.

<a href="arquivo/meulivro.pdf" download="meulivro.pdf" type="application/pdf">Baixar livro</a>


CAPITULO 11
Imagens Flexiveis:
Imagens podem possuir tres tipos de tag, <img>, <picture>, <source>. Podemos atraves de parametros dimensionar imagens para o tamanho desejado como no exemplo para imagem grande de 1000px:

<picture>
	<source media="(max-width:1050px)" srcset="foto-M.png" type="image/png">
	<img src="foto-G.png" alt="A imagem flexivel funciona">
</picture>

type indica o formato do arquivo, ver media types.
scrset configura o nome da imagem que sera carregada quando o tamanho indicado for atingido.
media serve para indicar o tamanho maximo a ser considerado para carregar a imagem

Exemplo codigo que carrega Imagem Pequena, Media e Grande, dependendo do tamanho da tela:

<picture>
	<source media="(max-width:750px)" scrset="foto-P.png" type="image/png">
	<source media="(max-width:1050px)" scrset="foto-M.png" type="image/png>
	<img src="foto-G.png" alt="A imagem flexivel funciona">
</picture>

Audio:
<audio preload="metadata" controls autoplay loop>
	<source src="midia/guanabara-33.mp3" type="audio/mpeg">
	<source src="midia/guanabara-33.ogg" type="audio/ogg">
	<source src="midia/guanabara-33.wav" type="image/wav">
	<p>Seu navegador nao suporta audio <a href="midia/guanabara-33.mp3" download="guanabara-33.mp3" type="audio/mpeg"></a></p>
</audio>

Atributo preload indica se o audio sera pre-carregado ou nao, tendo tres possibilidades:
metadata 	-> carrega apenas informacoes do arquivo, tempo, autor, tamanho
none 		-> nao vai carregar nada ate que o usuario clique play
auto		-> (padrao) carrega o arquivo quando a pagina for aberta, mesmo que nao seja reproduzido

Atributo controls apresenta o player na tela, caso nao esteja na tag audio o controle sera transparente e nao interativo.
Atributo autoplay quando utilizado sera rodado quando a pagina for aberta.
Atributo loop faz com que o audio seja repetido continuamente.

Dentro da tag audio podemos inserir varios source, caso o primeiro falhe, passara para o proximo e caso todos falhem a mensagem sera mostrada, no exemplo com download para o audio.
O youtube disponibiliza de uma biblioteca onde podemos buscar por efeitos sonoros e musicas sem direitos autorais.

Videos:
Os formatos mais suportados para videos em navegadores sao: MPEG, WEBM e OGG.

<video width="600" poster="thumb.jpg" controls autoplay>
	<source src="meu-video.webm" type="video/webm">
	<source src="meu-video.mp4" type="video/mp4">
	<source src="meu-video.ogv" type="video/ogg">
	<p>Seu navegador consegui carregar o video</p>
</video>

Atributo width indica o tamanho do video em tela.
Atributo poster configura a imagem de capa para o video.
Atributo controls configura os controles de video para aparecerem na tela.
Atributo autoplay roda o video quando a pagina e carregada.

Para evitarmos custos com hospedagem de nossos videos, podemos utilizar o youtube e vimeo.
Para incluir um video do youtube e vimeo, precisamos clicar em compartilhar e depois incorporar, que ira gerar um codigo que deve ser copiado e colado no codigo html.

Para buscar videos sem direitos autorais, assim como imagens, podemos utilizar o site pexels.
Podemos utilizar a ferramenta Handbrake para mudar formatos de videos.

CAPITULO 12
CSS:
Existem 3 tecnicas para inserirmos o design nas paginas, inline, interna e externa.

Na tecnica interna a tag <style> no html deve ser colocada no <head>, diferente da inline que colocamos style em cada tap, para seguir os padroes estabelecidos, porém a melhor forma para inserirmos um style e atraves de link, ou seja, tecnica externa, com a tag <link> no head, apos a tag de titulo, como:

<link rel="stylesheet" href="style.css">

Para criar uma classe de estilo rapida no vscode basta digitar link e escolher css das sugestoes apresentadas, apos isso selecione Siga o link, segurando ctrl+click e criar arquivo.

CAPITULO 13
Cores:
Sugestoes de aplicacao para as cores em determinados setores, segmentos:

COR				ASSOCIADO A 						USADO EM 									EVITAR

vermelho		amor, emocao, energia,				comida, moda, entretenimento, 				luxo, natureza, serviços
      			raiva, perigo						servicos de emergencia, saude				em geral

amarelo			felicidade, alegria, 				dar luz, calma, felicidade,					pode indicar algo barato,
				otimismo, covardia					chamar atencao								spam

laranja			divertimento, ambicao,				comercio eletronico, entretenimento,		pode se tornar cansativo
				calor, cautela						call-to-action 								se muito explorado

verde			saude, natureza, dinheiro,			relaxamento, turismo, financeiro,			luxo, tecnologia,
				sorte, inveja						meio ambiente								meninas adolescentes

azul			competencia, profissionalismo,		tecnologia, medicina, ciencias,				comida
				sabedoria, calma, frio 				governo										

roxo			criatividade, poder, sabedoria,		produtos de beleza, astrologia,				nao prende muito a 
				misterio							espiritualidade, adolescentes				atencao, indiferente

marrom			terra, robustez, estabilidade,		alimentacao, imobiliario, animais,			cor considerada conservadora
				amizade								financas									

preto 			elegancia, autoridade,				luxo, moda, marketing, cosmeticos			desconforto e medo
				misterio, morte						

branco 			pureza, limpeza, felicidade,		medicina, saude, tecnologia,				nao chama atencao sozinho,
				seguranca							luxo										precisa ser combinado

cinza			formalidade, sofisticacao,			bens de luxo, efeito calmante				sensasao de frieza
				frieza, indiferenca					

rosa 			amor, romance, sinceridade,			produtos femininos, cosmeticos				pode tornar sentimental e doce
				cuidados							

Ler sobre o Circulo Cromatico, Temperatura de cores, Monocromia;

Cores complementares: sao as cores opostas no circulo, que formam o extremo contraste, uma cor primaria tem sempre uma secundaria como contraste, uma tercearia tem sempre tercearia, essas cores juntas formam cinza.

Cores analogas: sao as cores diretamente ao lado, vizinhas, com baixo contraste mas extrema harmonia.

Ver cores analogas + complementares, analogas relacionadas, intercaladas, triadicas, quadrado e tetradicas;

Site color.adobe.com/pt para escolher combinacoes, no modo Criar + modo de cores RGB.
(https://color.adobe.com/pt/create/color-wheel)
(https://paletton.com)    (https://coolors.co/)
Para obtermos transparencia, devemos adicionar mais um parametro na cor, isso pode ser feito tambem arrastando a barra de transparencia no seletor de cores do vscode, para o gradiente usamos = background-image: linear-gradient(#, #, #), pois para o css o gradiente é considerado uma imagem, sendo o primeiro parametro o angulo/inclinacao e os outros dois as cores. Existe tambem radial-gradient, e % ao lado de cores para posicao.


CAPITULO 14
Fontes:
Definimos a fonte com o argumento font-family, onde o podemos dizer qual fonte sera usada primeiro e podemos inserir outras que podem ser utilizadas caso ela nao funcione, terminando geralmente com sans-serif ou serif. Exemplo:

<style>
	body{
		font-family: Arial, Helvetica, sans-serif;
		color: black;
	}
</style>

Para tamanho de fonte o recomendado e em pixels, px ou do em, EM e uma medida referencial em relacao ao tamanho da fonte original, de geralmente 16px, que equivale 1em, entao 2em seria o dobro.

font-size 	-> tamanho
font-style 	-> italico
font-weight -> negrito
text-align 	-> posicao do texto

Pesquisar CSS safe combinations para saber quais combinacoes de familias para grupos de tipografias, site w3schools.
Usamos @font-face em <style> para inserir/carregar uma familia baixada na pasta fonts. Colocar sempre que possivel ttf e otf, para maior compatibilidade com navegadores. Exemplo:

@font-face {
	font-family: 'Nome';
	src: url('fonts/nome fonte.otf') format('opentype'), url('fonts/nome fonte.ttf') format('truetype');
	font-weight: normal;
	font-style: normal;
}

Apos, colocamos no font-family desejado. Exemplo:

h1 {
	font-family: 'Nome', Times, serif;
	font-site: #;
	font-weight: #;
}
Os tipos de arquivo fonte sao, opentype(otf), truetype(ttf), embededd-opentype, truetype-aat(Apple Advanced Typography), svg.
Para detectar fontes partindo de imagens utilizamos o site: whatfontis.


CAPITULO 15
Seletores Personalizados em CSS:
Podemos identificar um determinado elemento unico atraves de id (#) ou agrupar elementos com caracteristicas semelhantes atraves de class(.)

Pseudo-classe sao palavras chaves para adicionar ESTADOS especiais a elementos, utilizamos(:). Exemplos:
:hover, :visited, :active, :checked, :empty, :focus.

Pseudo-elemento sao palavras chave que permitem formatar um pedaco especifico do elemento, utilizamos(::). Exemplos:
::before, ::after, ::first-letter, ::first-line.

Toda vez que usamos o simbolo > indicamos que é um filho, ou seja, que fica dentro de outro elemento.


CAPITULO 16
Modelo de Caixas:
Todo conteudo-content- possui uma largura -width- e uma altura -height-, chamamos de box-size, que nao inclui as medidas do padding, border, outline e margin. 
Ao redor do box-size fica a borda, entre a borda e o conteudo temos o padding (Basicamente a margem do conteudo em relacao a borda), e da borda para fora temos o margin (Margem com base na frame ou outros elementos), entre margin e borda temos o outline (Basicamente a borda da margem). (ver exercicio 19)

Modo completo x simplificado de gerar bordas e outline:

border-width: 10px;
border-style: solid;		-> border: 10px solid blue;
border-color: blue;

outline-width: 10px;
outline-style: solid;		-> outline: 10px solid red;
outline-color: red;

Modo completo x simplificado de gerar padding e margin: (sentido horario comencando top)

padding-top: 10px;
padding-right: 15px;
padding-bottom: 20px;		-> padding: 10px 15px 20px 25px;
padding-left: 25px;

margin-top: 10px;
margin-right: 15px;
margin-bottom: 20px;		-> margin: 10px 15px 20px 25px;
margin-left: 25px;

Tambem existe modo de set apenas vertical e horizontal, para padding e margin:

padding-top: 10px;
padding-right: 15px;
padding-bottom: 10px;		-> padding: 10px 15px;
padding-left: 15px;

Para a margem ser centralizada automaticamente, utilizamos:

margin: auto;

Elementos block-level, que iniciam em nova linha: <div> <main> <section> <aside>, etc.
Outros: addres article aside blockquote canvas dd div dl dt fieldset figcaption figure footer form h1-h6 header hr li main nav noscript ol p pre section table tfoot ul video

Elementos inline-leve, que continuam na linha:
a abbr acronym b bdo br button cite code dfn em i img input kdb label map object output q samp script select small span strong sub textarea tt var

Header - areas relativas ao cabecalho

Nav - define area que possui links de navegacao pela estrutura da pagina, pode estar dentro de um header

Main - agrupador de conteudo principal da pagina, secoes artigos e perifericos

Section - cria secoes na pagina, agrupamento tematico de conteudos

Article - um elemento que vai conter um conteudo que pode ser lido de forma independente, post, noticia

Aside - delimita conteudo periferico e complementar para o conteudo principal de artigo/secao

Footer - rodape, secao ou artigo, conteudo que nao faz parte diretamente e nao e conteudo principal, possui informacoes sobre autoria do conteudo, links, mapas, documentos

Ver exercicio 19-2 para composicao utilizando todos.

Sombras:
box-shadow: 3px 5px 4px black;

3px = deslocamento horizontal, o quanto vai andar para a direita (negativo para esquerda)

5px = deslocamento vertical, o quanto vai descer (negativo sobe)

4px = embacamento - blur, espalhamento

black = cor, podemos adicionar transparencia

Bordas Arredondadas:
Podemos por uma borda geral ou cada borda com um raio.
border-radius: 10px;
border-radius: 10px 30px; (cantos opostos)
border-radius: 10px 20px 30px 40px;

---fazer desafio 10---

